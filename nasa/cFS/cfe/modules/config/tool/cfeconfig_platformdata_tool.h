/* This file needs to reference the platform-specific configuration */

#ifndef CFECONFIG_PLATFORMDATA_TOOL_H
#define CFECONFIG_PLATFORMDATA_TOOL_H

/* NOTE: this header is generated by the build scripts, from the list of config IDs */
#include "cfe_configid_offset.h"

#include <stddef.h>

#define CFE_CONFIGTOOL_LIST_ASCENDING   0x00
#define CFE_CONFIGTOOL_LIST_DESCENDING  0x01
#define CFE_CONFIGTOOL_USE_LEADING_ZERO 0x02

typedef enum CFE_ConfigTool_RenderStyle_Enum
{
    CFE_ConfigTool_RenderStyle_NONE,
    CFE_ConfigTool_RenderStyle_ARRAY
} CFE_ConfigTool_RenderStyle_Enum_t;

typedef struct CFE_ConfigTool_ListDetail
{
    const char *  prefix;
    const char *  type_name;
    size_t        num_entries;
    const char *  custom_max;
    unsigned long options;
} CFE_ConfigTool_ListDetail_t;

typedef union CFE_ConfigTool_DetailBuffer
{
    CFE_ConfigTool_ListDetail_t list;
} CFE_ConfigTool_DetailBuffer_t;

typedef struct CFE_ConfigTool_DetailEntry
{
    CFE_ConfigTool_RenderStyle_Enum_t render_style;
    CFE_ConfigIdOffset_Enum_t         ido;

    CFE_ConfigTool_DetailBuffer_t u;
} CFE_ConfigTool_DetailEntry_t;

typedef struct CFE_ConfigTool_PlatformMapEntry
{
    const char *plat_name;

    const CFE_ConfigTool_DetailEntry_t *detail_ptr;
} CFE_ConfigTool_PlatformMapEntry_t;

extern const CFE_ConfigTool_PlatformMapEntry_t CFECONFIG_PLATFORMDATA_TABLE[];

#endif /* CFECONFIG_PLATFORMDATA_TOOL_H */
